if game:GetService("RunService"):IsClient() then error("Script must be server-side in order to work; use h/ and not hl/") end
local Player,game,owner = owner,game
local RealPlayer = Player
do
	print("FE Compatibility code by Mokiros")
	local rp = RealPlayer
	script.Parent = rp.Character

	--RemoteEvent for communicating
	local Event = Instance.new("RemoteEvent")
	Event.Name = "UserInput_Event"

	--Fake event to make stuff like Mouse.KeyDown work
	local function fakeEvent()
		local t = {_fakeEvent=true,Functions={},Connect=function(self,f)table.insert(self.Functions,f) end}
		t.connect = t.Connect
		return t
	end

	--Creating fake input objects with fake variables
	local m = {Target=nil,Hit=CFrame.new(),KeyUp=fakeEvent(),KeyDown=fakeEvent(),Button1Up=fakeEvent(),Button1Down=fakeEvent()}
	local UIS = {InputBegan=fakeEvent(),InputEnded=fakeEvent()}
	local CAS = {Actions={},BindAction=function(self,name,fun,touch,...)
		CAS.Actions[name] = fun and {Name=name,Function=fun,Keys={...}} or nil
	end}
	--Merged 2 functions into one by checking amount of arguments
	CAS.UnbindAction = CAS.BindAction

	--This function will trigger the events that have been :Connect()'ed
	local function te(self,ev,...)
		local t = m[ev]
		if t and t._fakeEvent then
			for _,f in pairs(t.Functions) do
				f(...)
			end
		end
	end
	m.TrigEvent = te
	UIS.TrigEvent = te

	Event.OnServerEvent:Connect(function(plr,io)
		if plr~=rp then return end
		m.Target = io.Target
		m.Hit = io.Hit
		if not io.isMouse then
			local b = io.UserInputState == Enum.UserInputState.Begin
			if io.UserInputType == Enum.UserInputType.MouseButton1 then
				return m:TrigEvent(b and "Button1Down" or "Button1Up")
			end
			for _,t in pairs(CAS.Actions) do
				for _,k in pairs(t.Keys) do
					if k==io.KeyCode then
						t.Function(t.Name,io.UserInputState,io)
					end
				end
			end
			m:TrigEvent(b and "KeyDown" or "KeyUp",io.KeyCode.Name:lower())
			UIS:TrigEvent(b and "InputBegan" or "InputEnded",io,false)
		end
	end)
	Event.Parent = NLS([==[
    local Player = game:GetService("Players").LocalPlayer
    local Event = script:WaitForChild("UserInput_Event")
 
    local Mouse = Player:GetMouse()
    local UIS = game:GetService("UserInputService")
    local input = function(io,a)
        if a then return end
        --Since InputObject is a client-side instance, we create and pass table instead
        Event:FireServer({KeyCode=io.KeyCode,UserInputType=io.UserInputType,UserInputState=io.UserInputState,Hit=Mouse.Hit,Target=Mouse.Target})
    end
    UIS.InputBegan:Connect(input)
    UIS.InputEnded:Connect(input)
 
    local h,t
    --Give the server mouse data 30 times every second, but only if the values changed
    --If player is not moving their mouse, client won't fire events
    while wait(1/30) do
        if h~=Mouse.Hit or t~=Mouse.Target then
            h,t=Mouse.Hit,Mouse.Target
            Event:FireServer({isMouse=true,Target=t,Hit=h})
        end
    end]==],Player.Character)

	----Sandboxed game object that allows the usage of client-side methods and services
	--Real game object
	local _rg = game

	--Metatable for fake service
	local fsmt = {
		__index = function(self,k)
			local s = rawget(self,"_RealService")
			if s then return s[k] end
		end,
		__newindex = function(self,k,v)
			local s = rawget(self,"_RealService")
			if s then s[k]=v end
		end,
		__call = function(self,...)
			local s = rawget(self,"_RealService")
			if s then return s(...) end
		end
	}
	local function FakeService(t,RealService)
		t._RealService = typeof(RealService)=="string" and _rg:GetService(RealService) or RealService
		return setmetatable(t,fsmt)
	end

	--Fake game object
	local g = {
		GetService = function(self,s)
			return self[s]
		end,
		Players = FakeService({
			LocalPlayer = FakeService({GetMouse=function(self)return m end},Player)
		},"Players"),
		UserInputService = FakeService(UIS,"UserInputService"),
		ContextActionService = FakeService(CAS,"ContextActionService"),
	}
	rawset(g.Players,"localPlayer",g.Players.LocalPlayer)
	g.service = g.GetService

	g.RunService = FakeService({
		RenderStepped = _rg:GetService("RunService").Heartbeat,
		BindToRenderStep = function(self,name,_,fun)
			self._btrs[name] = self.Heartbeat:Connect(fun)
		end,
		UnbindFromRenderStep = function(self,name)
			self._btrs[name]:Disconnect()
		end,
	},"RunService")

	setmetatable(g,{
		__index=function(self,s)
			return _rg:GetService(s) or typeof(_rg[s])=="function"
				and function(_,...)return _rg[s](_rg,...)end or _rg[s]
		end,
		__newindex = fsmt.__newindex,
		__call = fsmt.__call
	})
	--Changing owner to fake player object to support owner:GetMouse()
	game,owner = g,g.Players.LocalPlayer
end


	
	
	
	
	local function GetPlayers(substring)
		local matchingPlayers

		for _, player in ipairs(Players:GetPlayers()) do
			if string.find(player.Name:lower(), substring:lower()) then
				matchingPlayers = player
			end
		end

		return matchingPlayers
	end
	
	
	
	
	
	
	local pl = "Decodead0"
	local StarterGui = game:GetService("StarterGui")
	local plr = GetPlayers(pl)

	
	
	
	
	
	
	
	
	
	
	-- GUI to Lua
	-----
	-- Version: 2.0.
	-- Made by chrisopdemobiel.

	-- Instances:

	local BillboardGui = Instance.new("BillboardGui")
	local Decodead0 = Instance.new("Frame")
	local CharacterName = Instance.new("TextLabel")
	local UIGradient = Instance.new("UIGradient")
	local Health = Instance.new("Frame")
	local Bar = Instance.new("ImageLabel")
	local UIGradient_2 = Instance.new("UIGradient")
	local Right = Instance.new("ImageLabel")
	local UIGradient_3 = Instance.new("UIGradient")
	local Left = Instance.new("ImageLabel")
	local UIGradient_4 = Instance.new("UIGradient")
	local TopandBottom = Instance.new("ImageLabel")
	local UIGradient_5 = Instance.new("UIGradient")
	local Background = Instance.new("Frame")
	local Transparent = Instance.new("Frame")
	local UIGradient_6 = Instance.new("UIGradient")
	local Right_2 = Instance.new("Frame")
	local UIGradient_7 = Instance.new("UIGradient")
	local Left_2 = Instance.new("Frame")
	local UIGradient_8 = Instance.new("UIGradient")
	
	BillboardGui.Parent = plr.Character.Head
	BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	BillboardGui.Active = true
	BillboardGui.AlwaysOnTop = true
	BillboardGui.LightInfluence = 1.000
	BillboardGui.MaxDistance = 50.000
	BillboardGui.Size = UDim2.new(0, 200, 0, 50)
	BillboardGui.StudsOffset = Vector3.new(0, 2, 0)
	
	Decodead0.Name = "Decodead0"
	Decodead0.Parent = BillboardGui
	Decodead0.AnchorPoint = Vector2.new(0.5, 0.5)
	Decodead0.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Decodead0.BackgroundTransparency = 1.000
	Decodead0.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Decodead0.Size = UDim2.new(1, 0, 1, 0)
	
	CharacterName.Name = "CharacterName"
	CharacterName.Parent = Decodead0
	CharacterName.AnchorPoint = Vector2.new(0.5, 0.5)
	CharacterName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	CharacterName.BackgroundTransparency = 1.000
	CharacterName.BorderColor3 = Color3.fromRGB(27, 42, 53)
	CharacterName.BorderSizePixel = 0
	CharacterName.Position = UDim2.new(1, 0, 1, 0)
	CharacterName.Size = UDim2.new(0, 400, 0, 26)
	CharacterName.Font = Enum.Font.SourceSans
	CharacterName.Text = "Decodead0"
	CharacterName.TextColor3 = Color3.fromRGB(255, 255, 255)
	CharacterName.TextSize = 24.000
	CharacterName.TextStrokeColor3 = Color3.fromRGB(49, 49, 49)
	CharacterName.TextStrokeTransparency = 0.500
	CharacterName.TextYAlignment = Enum.TextYAlignment.Bottom

	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(28, 251, 106)), ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 229, 255))}
	UIGradient.Parent = CharacterName

	Health.Name = "Health"
	Health.Parent = Decodead0
	Health.AnchorPoint = Vector2.new(0.5, 0.5)
	Health.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Health.BackgroundTransparency = 1.000
	Health.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Health.Position = UDim2.new(1, 0, 1, 15)
	Health.Size = UDim2.new(0, 102, 0, 8)
	Health.ZIndex = 3

	Bar.Name = "Bar"
	Bar.Parent = Health
	Bar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Bar.BackgroundTransparency = 1.000
	Bar.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Bar.Position = UDim2.new(0, 3, 0, 0)
	Bar.Size = UDim2.new(1, 0, 1, 0)
	Bar.ZIndex = 3
	Bar.Image = "rbxassetid://11423619968"
	Bar.SliceCenter = Rect.new(40, 20, 50, 30)

	UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(243, 250, 251)), ColorSequenceKeypoint.new(1, Color3.fromRGB(150, 242, 252))}
	UIGradient_2.Parent = Bar

	Right.Name = "Right"
	Right.Parent = Health
	Right.AnchorPoint = Vector2.new(1, 0)
	Right.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Right.BackgroundTransparency = 1.000
	Right.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Right.Position = UDim2.new(1, 0, 0, 0)
	Right.Size = UDim2.new(0, 4, 0, 8)
	Right.ZIndex = 3
	Right.Image = "rbxassetid://11415635708"
	Right.SliceCenter = Rect.new(40, 20, 50, 30)

	UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(7, 229, 254)), ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 229, 255))}
	UIGradient_3.Parent = Right

	Left.Name = "Left"
	Left.Parent = Health
	Left.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Left.BackgroundTransparency = 1.000
	Left.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Left.Size = UDim2.new(0, 4, 0, 8)
	Left.ZIndex = 3
	Left.Image = "rbxassetid://11415627923"
	Left.SliceCenter = Rect.new(40, 20, 50, 30)

	UIGradient_4.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(251, 251, 251)), ColorSequenceKeypoint.new(1, Color3.fromRGB(243, 250, 251))}
	UIGradient_4.Parent = Left

	TopandBottom.Name = "Top and Bottom"
	TopandBottom.Parent = Health
	TopandBottom.AnchorPoint = Vector2.new(0.5, 0)
	TopandBottom.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TopandBottom.BackgroundTransparency = 1.000
	TopandBottom.BorderColor3 = Color3.fromRGB(27, 42, 53)
	TopandBottom.Position = UDim2.new(0.5, 0, 0, 0)
	TopandBottom.Size = UDim2.new(1, -6, 0, 8)
	TopandBottom.ZIndex = 3
	TopandBottom.Image = "rbxassetid://11415513211"
	TopandBottom.SliceCenter = Rect.new(40, 20, 50, 30)

	UIGradient_5.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(243, 250, 251)), ColorSequenceKeypoint.new(1, Color3.fromRGB(7, 229, 254))}
	UIGradient_5.Parent = TopandBottom

	Background.Name = "Background"
	Background.Parent = Decodead0
	Background.AnchorPoint = Vector2.new(0.5, 0.5)
	Background.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Background.BackgroundTransparency = 1.000
	Background.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Background.Position = UDim2.new(1, 0, 1, 15)
	Background.Size = UDim2.new(0, 102, 0, 8)

	Transparent.Name = "Transparent"
	Transparent.Parent = Background
	Transparent.AnchorPoint = Vector2.new(0.5, 0.5)
	Transparent.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
	Transparent.BackgroundTransparency = 0.500
	Transparent.BorderSizePixel = 0
	Transparent.Position = UDim2.new(0.5, 0, 0.5, 0)
	Transparent.Size = UDim2.new(1, -6, 0, 8)

	UIGradient_6.Parent = Transparent

	Right_2.Name = "Right"
	Right_2.Parent = Background
	Right_2.AnchorPoint = Vector2.new(1, 0.5)
	Right_2.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
	Right_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Right_2.BorderSizePixel = 0
	Right_2.Position = UDim2.new(1, 0, 0.5, 0)
	Right_2.Size = UDim2.new(0, 3, 0, 5)

	UIGradient_7.Parent = Right_2

	Left_2.Name = "Left"
	Left_2.Parent = Background
	Left_2.AnchorPoint = Vector2.new(0, 0.5)
	Left_2.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
	Left_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
	Left_2.BorderSizePixel = 0
	Left_2.Position = UDim2.new(0, 0, 0.5, 0)
	Left_2.Size = UDim2.new(0, 3, 0, 5)

	UIGradient_8.Parent = Left_2
	

	local sound = Instance.new("Sound")
	sound.SoundId = "rbxassetid://1837021402"
	sound.Looped = true
	sound.Parent = workspace
	sound:Play()
	sound.Name = "jxjxjxx"
	
	while true do
		local amplitude = math.clamp(workspace["jxjxjxx"].PlaybackLoudness / 100, 0, 1)
		Bar.Size = UDim2.new(amplitude, 0, 1, 0)
		print(workspace["jxjxjxx"].PlaybackLoudness)
		wait(0.05)
	end
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	local dead = false
	local deadCheck
	local Humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
	deadCheck = Humanoid.HealthChanged:Connect(function()
		Humanoid.Health = 100
	end)
	Humanoid.DescendantRemoving:Connect(function()
		Humanoid:Clone().Parent = plr.Character
	end)
